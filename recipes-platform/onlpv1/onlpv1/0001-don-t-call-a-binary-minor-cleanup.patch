From 03183852745c3762824ecc05bb0b060b58bd87f7 Mon Sep 17 00:00:00 2001
From: Tobias Jungel <tobias.jungel@bisdn.de>
Date: Fri, 5 Apr 2019 23:12:35 +0200
Subject: [PATCH] don't call a binary, minor cleanup

* do not depend on realpath binary use glob and realpath c functions
* add some error logs
* indentation cleanup
* fix typos
---
 .../onlp/builds/src/module/src/fani.c         | 17 ++--
 .../onlp/builds/src/module/src/platform_lib.c | 37 ++++----
 .../onlp/builds/src/module/src/platform_lib.h |  4 +-
 .../onlp/builds/src/module/src/thermali.c     | 84 ++++++++++---------
 4 files changed, 77 insertions(+), 65 deletions(-)

diff --git a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/fani.c b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/fani.c
index ef6ec17e..15ee9f61 100644
--- a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/fani.c
+++ b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/fani.c
@@ -26,6 +26,7 @@
 
 #include <onlp/platformi/fani.h>
 #include <onlplib/file.h>
+#include "x86_64_delta_ag8032_log.h"
 #include "platform_lib.h"
 #include "eeprom_info.h"
 
@@ -251,13 +252,17 @@ int onlp_fani_info_get(onlp_oid_t id, onlp_fan_info_t* info)
 	int fid;
 	int present = 1;
 
-    if (!ONLP_OID_IS_FAN(id))
+	if (!ONLP_OID_IS_FAN(id)) {
+		AIM_LOG_ERROR("not a valid oid");
 		return ONLP_STATUS_E_INVALID;
+	}
 
-    fid = ONLP_OID_ID_GET(id);
+	fid = ONLP_OID_ID_GET(id);
 
-	if (!plat_fan_is_valid(fid))
+	if (!plat_fan_is_valid(fid)) {
+		AIM_LOG_ERROR("plat_fan_is_valid failed");
 		return ONLP_STATUS_E_INVALID;
+	}
 
 	fan = &plat_fans[fid];
 
@@ -282,6 +287,7 @@ int onlp_fani_info_get(onlp_oid_t id, onlp_fan_info_t* info)
 		info->status |= ONLP_FAN_STATUS_PRESENT;
 		if (info->caps & ONLP_FAN_CAPS_GET_RPM) {
 			if (plat_os_file_read_int(&info->rpm, fan->rpm_get_path, NULL) < 0) {
+				AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_FAN_CAPS_GET_RPM rpm_path=%s", fan->rpm_get_path);
 				error ++;
 			} else {
 				if (fan->rpm_set_value > 0) {
@@ -293,6 +299,7 @@ int onlp_fani_info_get(onlp_oid_t id, onlp_fan_info_t* info)
 		}
 		if (info->caps & ONLP_FAN_CAPS_GET_PERCENTAGE) {
 			if (plat_os_file_read_int(&info->percentage, fan->per_get_path, NULL) < 0) {
+				AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_FAN_CAPS_GET_PERCENTAGE path=%s", fan->per_get_path);
 				error ++;
 			} else {
 				if (fan->per_set_value > 0) {
@@ -356,7 +363,7 @@ onlp_fani_rpm_set(onlp_oid_t id, int rpm)
     }
 
 	fan->rpm_set_value = rpm;
-    
+
     return ONLP_STATUS_OK;
 }
 
@@ -388,7 +395,7 @@ int onlp_fani_percentage_set(onlp_oid_t id, int p)
     }
 
 	fan->per_set_value = p;
-    
+
     return ONLP_STATUS_OK;
 
 }
diff --git a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.c b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.c
index b75649e0..e5755423 100644
--- a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.c
+++ b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.c
@@ -24,7 +24,10 @@
  *
  *
  ***********************************************************/
+#include <glob.h>
+#include <limits.h>
 #include <stdio.h>
+#include <stdlib.h>
 #include <unistd.h>
 #include <onlplib/file.h>
 #include "platform_lib.h"
@@ -291,7 +294,7 @@ int plat_psu_state_update (plat_psu_t *psu)
 				break;
 			}
 
-			if (onlp_i2c_readb (psu->pmbus_bus, psu->pmbus_addr, 0x00, 
+			if (onlp_i2c_readb (psu->pmbus_bus, psu->pmbus_addr, 0x00,
 					ONLP_I2C_F_FORCE | ONLP_I2C_F_DISABLE_READ_RETRIES) >= 0) {
 
 				psu->state = PLAT_PSU_STATE_PMBUS_READY;
@@ -315,7 +318,7 @@ int plat_psu_state_update (plat_psu_t *psu)
 				break;
 			}
 			// If pmbus interface is not ok, remove kernel module
-			if (onlp_i2c_readb (psu->pmbus_bus, psu->pmbus_addr, 0x00, 
+			if (onlp_i2c_readb (psu->pmbus_bus, psu->pmbus_addr, 0x00,
 					ONLP_I2C_F_FORCE | ONLP_I2C_F_DISABLE_READ_RETRIES) < 0) {
 
 				psu->state = PLAT_PSU_STATE_PRESENT;
@@ -341,22 +344,22 @@ int plat_psu_state_update (plat_psu_t *psu)
 // OS HELP ROUTINE
 static char *plat_os_path_complete (char *path_pattern, char *buff, int len)
 {
-	FILE *fp;
-
-	snprintf (buff, len, "realpath -z %s 2>/dev/null", path_pattern);
-	fp = popen (buff, "r");
-	if (fp) {
-		fgets (buff, len, fp);
-		pclose (fp);
-	} else {
-		snprintf (buff, len, "%s", path_pattern);
+	glob_t globbuf;
+	int rv = glob(path_pattern, 0, NULL, &globbuf);
+	if (rv != 0) {
+		globfree(&globbuf);
+		snprintf(buff, len, "%s", path_pattern);
+		return buff;
 	}
+
+	snprintf(buff, len, "%s", globbuf.gl_pathv[0]);
+	globfree(&globbuf);
 	return buff;
 }
 
 int plat_os_file_is_existed (char *path)
 {
-	char buff[1024];
+	char buff[PATH_MAX+1] = {0};
 
 	if (path)
 		return access (plat_os_path_complete(path, buff, sizeof(buff)), F_OK) == 0 ? 1 : 0;
@@ -365,22 +368,18 @@ int plat_os_file_is_existed (char *path)
 
 int plat_os_file_read (uint8_t *data, int max, int *len, char *path, ...)
 {
-	char buff[1024];
+	char buff[PATH_MAX+1] = {0};
 	return onlp_file_read (data, max, len, plat_os_path_complete(path, buff, sizeof(buff)), NULL);
 }
 
 int plat_os_file_read_int (int *val, char *path, ...)
 {
-	char buff[1024];
+	char buff[PATH_MAX+1] = {0};
 	return onlp_file_read_int (val, plat_os_path_complete(path, buff, sizeof(buff)), NULL);
 }
 
 int plat_os_file_write_int(int val, char *path, ...)
 {
-	char buff[1024];
+	char buff[PATH_MAX+1] = {0};
 	return onlp_file_write_int (val, plat_os_path_complete(path, buff, sizeof(buff)), NULL);
 }
-
-
-
-
diff --git a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.h b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.h
index 3148de35..f0e677f9 100644
--- a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.h
+++ b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/platform_lib.h
@@ -123,8 +123,8 @@ typedef struct plat_thermal {
 
 	char	*temp_get_path;
 
-	char	*warnning_set_path;
-	int		def_warnning;
+	char	*warning_set_path;
+	int		def_warning;
 
 	char	*critical_set_path;
 	int		def_critical;
diff --git a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/thermali.c b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/thermali.c
index a3301cc2..ed259b11 100644
--- a/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/thermali.c
+++ b/packages/platforms/delta/x86-64/x86-64-delta-ag8032/onlp/builds/src/module/src/thermali.c
@@ -24,6 +24,9 @@
  ***********************************************************/
 #include <onlplib/file.h>
 #include <onlp/platformi/thermali.h>
+#include <stdio.h>
+#include <string.h>
+#include "x86_64_delta_ag8032_log.h"
 #include "platform_lib.h"
 
 static int _psu_thermal_present (void *e);
@@ -35,55 +38,55 @@ static plat_thermal_t plat_thermals[] = {
 	[PLAT_THERMAL_ID_1] = {
 		.desc = "Thermal Sensor %d - close to cpu",
 		.temp_get_path     = "/sys/bus/i2c/devices/0-0048/hwmon/*/temp1_input",
-		.warnning_set_path = "/sys/bus/i2c/devices/0-0048/hwmon/*/temp1_max_hyst",
+		.warning_set_path  = "/sys/bus/i2c/devices/0-0048/hwmon/*/temp1_max_hyst",
 		.critical_set_path = NULL,
 		.shutdown_set_path = "/sys/bus/i2c/devices/0-0048/hwmon/*/temp1_max",
 
-		.def_warnning = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
+		.def_warning = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
 		.def_critical = ONLP_THERMAL_THRESHOLD_ERROR_DEFAULT,
 		.def_shutdown = ONLP_THERMAL_THRESHOLD_SHUTDOWN_DEFAULT,
 	},
 	[PLAT_THERMAL_ID_2] = {
 		.desc = "Thermal Sensor %d - Main Board (U54)",
 		.temp_get_path     = "/sys/bus/i2c/devices/2-004a/hwmon/*/temp1_input",
-		.warnning_set_path = "/sys/bus/i2c/devices/2-004a/hwmon/*/temp1_max_hyst",
+		.warning_set_path  = "/sys/bus/i2c/devices/2-004a/hwmon/*/temp1_max_hyst",
 		.critical_set_path = NULL,
 		.shutdown_set_path = "/sys/bus/i2c/devices/2-004a/hwmon/*/temp1_max",
 
-		.def_warnning = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
+		.def_warning  = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
 		.def_critical = ONLP_THERMAL_THRESHOLD_ERROR_DEFAULT,
 		.def_shutdown = ONLP_THERMAL_THRESHOLD_SHUTDOWN_DEFAULT,
 	},
 	[PLAT_THERMAL_ID_3] = {
 		.desc = "Thermal Sensor %d - BCM chip Bottom (U70)",
 		.temp_get_path     = "/sys/bus/i2c/devices/2-004c/hwmon/*/temp1_input",
-		.warnning_set_path = "/sys/bus/i2c/devices/2-004c/hwmon/*/temp1_max_hyst",
+		.warning_set_path  = "/sys/bus/i2c/devices/2-004c/hwmon/*/temp1_max_hyst",
 		.critical_set_path = NULL,
 		.shutdown_set_path = "/sys/bus/i2c/devices/2-004c/hwmon/*/temp1_max",
 
-		.def_warnning = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
+		.def_warning  = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
 		.def_critical = ONLP_THERMAL_THRESHOLD_ERROR_DEFAULT,
 		.def_shutdown = ONLP_THERMAL_THRESHOLD_SHUTDOWN_DEFAULT,
 	},
 	[PLAT_THERMAL_ID_4] = {
 		.desc = "Thermal Sensor %d - BCM chip Top (U71)",
 		.temp_get_path     = "/sys/bus/i2c/devices/2-004d/hwmon/*/temp1_input",
-		.warnning_set_path = "/sys/bus/i2c/devices/2-004d/hwmon/*/temp1_max_hyst",
+		.warning_set_path  = "/sys/bus/i2c/devices/2-004d/hwmon/*/temp1_max_hyst",
 		.critical_set_path = NULL,
 		.shutdown_set_path = "/sys/bus/i2c/devices/2-004d/hwmon/*/temp1_max",
 
-		.def_warnning = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
+		.def_warning  = ONLP_THERMAL_THRESHOLD_WARNING_DEFAULT,
 		.def_critical = ONLP_THERMAL_THRESHOLD_ERROR_DEFAULT,
 		.def_shutdown = ONLP_THERMAL_THRESHOLD_SHUTDOWN_DEFAULT,
 	},
 	[PLAT_THERMAL_ID_5] = {
 		.desc = "Thermal Sensor %d - Cpu Core",
 		.temp_get_path     = "/sys/devices/platform/coretemp.0/hwmon/*/temp2_input",
-		.warnning_set_path = "/sys/devices/platform/coretemp.0/hwmon/*/temp2_crit",
+		.warning_set_path  = "/sys/devices/platform/coretemp.0/hwmon/*/temp2_crit",
 		.critical_set_path = NULL,
 		.shutdown_set_path = "/sys/devices/platform/coretemp.0/hwmon/*/temp2_max",
 
-		.def_warnning = 0,
+		.def_warning = 0,
 		.def_critical = 0,
 		.def_shutdown = 0,
 	},
@@ -93,7 +96,7 @@ static plat_thermal_t plat_thermals[] = {
 		.temp_get_path     = "/sys/bus/i2c/devices/i2c-4/4-0058/hwmon/*/temp1_input",
 		.shutdown_set_path = "/sys/bus/i2c/devices/i2c-4/4-0058/hwmon/*/temp1_max",
 
-		.def_warnning = 0,
+		.def_warning = 0,
 		.def_critical = 0,
 		.def_shutdown = 0,
 	},
@@ -103,7 +106,7 @@ static plat_thermal_t plat_thermals[] = {
 		.temp_get_path     = "/sys/bus/i2c/devices/i2c-4/4-0059/hwmon/*/temp1_input",
 		.shutdown_set_path = "/sys/bus/i2c/devices/i2c-4/4-0059/hwmon/*/temp1_max",
 
-		.def_warnning = 0,
+		.def_warning = 0,
 		.def_critical = 0,
 		.def_shutdown = 0,
 	},
@@ -132,7 +135,7 @@ static int plat_thermal_is_valid (int id)
 }
 
 int onlp_thermali_init(void)
-{ 
+{
 	int i;
 	plat_thermal_t *thermal;
 
@@ -141,14 +144,14 @@ int onlp_thermali_init(void)
 			continue;
 		thermal = &plat_thermals[i];
 
-		if (thermal->warnning_set_path && thermal->def_warnning)
-			plat_os_file_write_int (thermal->def_warnning, thermal->warnning_set_path, NULL);
+		if (thermal->warning_set_path && thermal->def_warning)
+			plat_os_file_write_int (thermal->def_warning, thermal->warning_set_path, NULL);
 		if (thermal->critical_set_path && thermal->def_critical)
 			plat_os_file_write_int (thermal->def_critical, thermal->critical_set_path, NULL);
 		if (thermal->shutdown_set_path && thermal->def_shutdown)
 			plat_os_file_write_int (thermal->def_shutdown, thermal->shutdown_set_path, NULL);
 	}
-    return ONLP_STATUS_OK;
+	return ONLP_STATUS_OK;
 }
 
 /*
@@ -163,20 +166,24 @@ int onlp_thermali_init(void)
  */
 int
 onlp_thermali_info_get(onlp_oid_t id, onlp_thermal_info_t* info)
-{   
-    int tid;
+{
+	int tid;
 	int present = 1;
 	plat_thermal_t *thermal;
 	int value;
 	int error;
 
-    if (!ONLP_OID_IS_THERMAL(id))
+	if (!ONLP_OID_IS_THERMAL(id)) {
+		AIM_LOG_ERROR("not a valid oid");
 		return ONLP_STATUS_E_INVALID;
+	}
 
-    tid = ONLP_OID_ID_GET(id);
+	tid = ONLP_OID_ID_GET(id);
 
-	if (!plat_thermal_is_valid(tid))
+	if (!plat_thermal_is_valid(tid)) {
+		AIM_LOG_ERROR("not a valid platform thermal id");
 		return ONLP_STATUS_E_INVALID;
+	}
 
 	thermal = &plat_thermals[tid];
 
@@ -184,16 +191,16 @@ onlp_thermali_info_get(onlp_oid_t id, onlp_thermal_info_t* info)
 		present = thermal->present(thermal) ? 1 : 0;
 	}
 
-	memset (info, 0, sizeof(*info));
+	memset(info, 0, sizeof(*info));
 
 	// fix onlp_thermal_info_t
 	info->hdr.id = id;
 	if (thermal->desc)
-		snprintf (info->hdr.description, sizeof(info->hdr.description), thermal->desc, tid);
+		snprintf(info->hdr.description, sizeof(info->hdr.description), thermal->desc, tid);
 
 	if (thermal->temp_get_path)
 		info->caps |= ONLP_THERMAL_CAPS_GET_TEMPERATURE;
-	if (thermal->warnning_set_path || thermal->def_warnning)
+	if (thermal->warning_set_path || thermal->def_warning)
 		info->caps |= ONLP_THERMAL_CAPS_GET_WARNING_THRESHOLD;
 	if (thermal->critical_set_path || thermal->def_critical)
 		info->caps |= ONLP_THERMAL_CAPS_GET_ERROR_THRESHOLD;
@@ -203,26 +210,29 @@ onlp_thermali_info_get(onlp_oid_t id, onlp_thermal_info_t* info)
 	// Get value
 	error = 0;
 	if (info->caps & ONLP_THERMAL_CAPS_GET_TEMPERATURE) {
-		if (plat_os_file_read_int(&value, thermal->temp_get_path, NULL) < 0)
+		if (plat_os_file_read_int(&value, thermal->temp_get_path, NULL) < 0) {
+			AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_THERMAL_CAPS_GET_TEMPERATURE path=%s", thermal->temp_get_path);
 			error ++;
-		else
+		} else
 			info->mcelsius = value;
 	}
 	if (info->caps & ONLP_THERMAL_CAPS_GET_WARNING_THRESHOLD) {
-		if (thermal->warnning_set_path) {
-			if (plat_os_file_read_int(&value, thermal->warnning_set_path, NULL) < 0)
+		if (thermal->warning_set_path) {
+			if (plat_os_file_read_int(&value, thermal->warning_set_path, NULL) < 0) {
+				AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_THERMAL_CAPS_GET_WARNING_THRESHOLD path=%s", thermal->warning_set_path);
 				error ++;
-			else
+			} else
 				info->thresholds.warning = value;
 		} else {
-				info->thresholds.warning = thermal->def_warnning;
+				info->thresholds.warning = thermal->def_warning;
 		}
 	}
 	if (info->caps & ONLP_THERMAL_CAPS_GET_ERROR_THRESHOLD) {
 		if (thermal->critical_set_path) {
-			if (plat_os_file_read_int(&value, thermal->critical_set_path, NULL) < 0)
+			if (plat_os_file_read_int(&value, thermal->critical_set_path, NULL) < 0) {
+				AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_THERMAL_CAPS_GET_ERROR_THRESHOLD path=%s", thermal->critical_set_path);
 				error ++;
-			else
+			} else
 				info->thresholds.error = value;
 		} else {
 				info->thresholds.error = thermal->def_critical;
@@ -230,17 +240,16 @@ onlp_thermali_info_get(onlp_oid_t id, onlp_thermal_info_t* info)
 	}
 	if (info->caps & ONLP_THERMAL_CAPS_GET_SHUTDOWN_THRESHOLD) {
 		if (thermal->shutdown_set_path) {
-			if (plat_os_file_read_int(&value, thermal->shutdown_set_path, NULL) < 0)
+			if (plat_os_file_read_int(&value, thermal->shutdown_set_path, NULL) < 0) {
+				AIM_LOG_ERROR("plat_os_file_read_int failed for ONLP_THERMAL_CAPS_GET_SHUTDOWN_THRESHOLD path=%s", thermal->shutdown_set_path);
 				error ++;
-			else
+			} else
 				info->thresholds.shutdown = value;
 		} else {
 				info->thresholds.shutdown = thermal->def_shutdown;
 		}
 	}
 
-
-
 	if (present)
 		info->status |= ONLP_THERMAL_STATUS_PRESENT;
 
@@ -258,8 +267,5 @@ onlp_thermali_info_get(onlp_oid_t id, onlp_thermal_info_t* info)
 		}
 	}
 
-	
 	return error ? ONLP_STATUS_E_INTERNAL : ONLP_STATUS_OK;
 }
-
-
-- 
2.20.1

